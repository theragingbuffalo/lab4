

In madvise.c it uses the random flag to set the bit for VM_RAND_READ in the flags
Check to see where the VM_RAND_READ is used and add one or more ifs thereo that to have it or with disable_prepaging.
In filemap.c would be a good place to look to see how VM_RAND_READ is used.


Things that I did that made it work on my laptop
Anything in <> is a comment from me and you should not type
Some filenames may be different, especially the kernel file name if your verison is different
Remember you can use tab to have it autocomplete things, which also also helps find typos


These are initial things that you should have already done and need not redo

sudo apt-get update
sudo apt-get install git
sudo apt install  build-essential kernel-package fakeroot libncurses5-dev libssl-dev ccache


mkdir kernelbuild   <you may name it something else, it should not matter>
cd  kernelbuild

sudo git clone git://kernel.ubuntu.com/ubuntu/ubuntu-xenial.git

cd ubuntu-xenial/

sudo cp  /boot/config-3.13.0-32-generic .config     <You will need some .config file.  One of these may work
					sudo make oldconfig  
					sudo make menuconfig	
					sudo make clean >


sudo make -j 4 deb-pkg LOCALVERSION=-custom       <The -j 4 tells it to assume 4 processors
     	       	       				   The local version name can be whatever, it is
						   only to make it easier to make sure you are
						   running your kernel rather than a default one>

cd ..		           <The *.deb files will be in the parent directory>

   <Remember, your filenames may be slightly different>

sudo dpkg -i linux-firmware-image-4.4.87-custom_4.4.87-custom-1_amd64.deb 
sudo dpkg -i linux-libc-dev_4.4.87-custom-1_amd64.deb 
sudo dpkg -i linux-headers-4.4.87-custom_4.4.87-custom-1_amd64.deb 
sudo dpkg -i linux-image-4.4.87-custom-dbg_4.4.87-custom-1_amd64.deb 
sudo dpkg -i linux-image-4.4.87-custom_4.4.87-custom-1_amd64.deb 


Now reboot your computer to have it boot and load the new kernel
uname -a will tell you what kernel you are running

Remember that if your permissions on the structure in proc is 0644, you need
to run your testing as root to be able to write to it.  You also could have
the permissions be 0664 or 0666.


